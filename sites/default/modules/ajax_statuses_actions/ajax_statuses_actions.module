<?php
function ajax_statuses_actions_init() {
  if (!drupal_installation_attempted() && (arg(0) == 'node' && arg(1) != '')) {
    // Load in Drupal core AJAX library.
    drupal_add_library('system', 'drupal.ajax');
    // Load in our custom JavaScript.
    drupal_add_js(drupal_get_path('module', 'ajax_statuses_actions') . '/ajax_statuses_actions.js', array('weight' => 99));
    drupal_add_js(drupal_get_path('module', 'ajax_statuses_actions') . '/jquery.event.mousestop.js', array('weight' => 98));
  }
}

function ajax_statuses_actions_menu(){
  $items['statusesaction/%/%/%/delete/ajax'] = array(
    'title' => 'ajax callback callback for delete',
    'page callback' => 'ajax_statuses_actions_delete_status_callback',
    'delivery callback' => 'ajax_deliver',
    'page arguments' => array(1,2,3,5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['statusesaction/%/%/%/delete/nojs'] = array(
    'title' => 'non ajax callback for delete',
    'page callback' => 'ajax_statuses_actions_delete_status_callback',
    'page arguments' => array(1,2,3,5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['statusesaction/%/%/%/edit/ajax'] = array(
    'title' => 'ajax callback for edit',
    'page callback' => 'ajax_og_subscribe_join_course_callback',
    'page arguments' => array(1,2,3,5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  $items['statusesaction/%/%/%/edit/nojs'] = array(
  'title' => 'non ajax callback for edits',
  'page callback' => 'ajax_og_subscribe_join_course_callback',
  'page arguments' => array(1,2,3,5),
  'access arguments' => array('access content'),
  'type' => MENU_CALLBACK,
  );
  
  return $items; 
}

function ajax_statuses_actions_delete_status_callback($status_id, $entity_type, $etid, $js){
  if($js == 'nojs'){
    drupal_goto("/statuses/$status_id/delete?destination=$entity_type/$etid");
    return;
  }
  global $user;
  $status = statuses_load($status_id);
  $delete_form = drupal_render(drupal_get_form('_ajax_statuses_actions_delete', $status));
  $selector = 'div#statuses-item-'.$status_id. ' span.statuses-delete';
  // Define a new array to hold our AJAX commands.
  $ajax_commands = array();
  $ajax_commands[] = ajax_command_before($selector, "<div id='delete-status-form-block'>$delete_form<div class='join-course-arrow-block'></div></div>");
  $ajax_commands[] = ajax_command_invoke('div#delete-status-form-block', 'hide');
  $ajax_commands[] = ajax_command_invoke('div#delete-status-form-block', 'fadeIn', array(300));
  return array('#type' => 'ajax', '#commands' => $ajax_commands);
}


/**
 * Ajax responsive forms for deleting and editing statuses. 
**/
  
/**
 * The delete status confirmation form.
 */
function _ajax_statuses_actions_delete($form, &$form_state, $status) {
  $form['infotext'] = array('#markup' => '<p>' . t('Are you sure you want to permanently delete the status %status?', array('%status' => $status->message)) . '</p>');
  $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Confirm'),
      // Add the Ajax Submit Function
      '#ajax' => array(
        'callback' => '_ajax_statuses_actions_delete_confirm',
        'progress' => false,
        ),
  );
  $form['status-sid'] = array(
      '#type' => 'value',
      '#value' => $status->sid,
  );
  $form['back'] = array(
      '#markup' => l('Cancel', '#', array('attributes' => array('class' => "cancel-status-delete"))),
  );

  return $form;
}

/**
 * Deletes a status.
 */
function _ajax_statuses_actions_delete_confirm($form, &$form_state) {
  $status = statuses_load($form_state['values']['status-sid']);
  $selector = 'div#statuses-item-'.$status->sid.'';
  if(statuses_user_access('delete', $status)){
    statuses_delete_status($status);
    // Define a new array to hold our AJAX commands.
    $ajax_commands = array();
    $ajax_commands[] = ajax_command_replace($selector, "<div id='status-delete-message-$status->id'>Status poistettu. T채m채 ilmoitus poistuu hetken kuluttua.</div>");
    $ajax_commands[] = ajax_command_invoke("div#status-delete-message-$status->id", 'hide');
    $ajax_commands[] = ajax_command_invoke("div#status-delete-message-$status->id", 'fadeIn', array(300));
  }else{
    $ajax_commands[] = ajax_command_before($selector, "<div id='status-delete-message-$status->id'>Sinulla ei ole oikeutta poistaa t채t채 statusta.</div>");
    $ajax_commands[] = ajax_command_invoke("div#status-delete-message-$status->id", 'hide');
    $ajax_commands[] = ajax_command_invoke("div#status-delete-message-$status->id", 'fadeIn', array(300));
  }
  return array('#type' => 'ajax', '#commands' => $ajax_commands);
}