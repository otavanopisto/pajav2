<?php
function paja_course_price_field_info() {
  return array(
      'paja_course_price' => array(
        'label' => t('Course price calculator'),
        'description' => t("This field stores your course price"),
        'settings' => array('allowed_values' => array(), 'allowed_values_function' => ''),
        'default_widget' => 'paja_course_price_field',
        'default_formatter' => 'paja_course_price_default',
      ),
  );
}

function paja_course_price_field_widget_info() {
  return array(
      'paja_course_price_field' => array(
          'label' => t('Paja course price widget'),
          'field types' => array('paja_course_price'),
      ),
  );
}

/**
 * Implements hook_field_settings_form().
 */
function paja_course_price_field_settings_form($field, $instance, $has_data) {
  $settings = $field['settings'];
  // Add your global settings fields here
  $form = array();
  return $form;
}


function paja_course_price_field_is_empty($item, $field) {
  if (empty($item['paja_course_price']['instructor_fee'])) {
    return TRUE;
  }elseif (empty($item['paja_course_price']['distance_days'])) {
    return TRUE;
  }elseif (empty($item['paja_course_price']['local_days'])) {
    return TRUE;
  }elseif (empty($item['paja_course_price']['attendees_min'])) {
    return TRUE;
  }elseif (empty($item['paja_course_price']['attendees_max'])) {
    return TRUE;
  }elseif (empty($item['paja_course_price']['miscellanous_costs'])) {
    return TRUE;
  }elseif (empty($item['paja_course_price']['price'])) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_field_validate().
 */
function paja_course_price_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors) {
  // Loop through field items in the case of multiple values.
//   foreach ($items as $delta => $item) {
//     if (isset($item['plate_number']) && $item['plate_number'] != '') {
//       if (!valid_license_plate($item['plate_number'])) {
//         $errors[$field['field_name']][$langcode][$delta][] = array(
//             'error' => t('Invalid license plate number.'),
//         );
//       }
//     }
//   }
}

/**
 * Implements hook_field_widget_form().
 */
function paja_course_price_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  switch ($instance['widget']['type']) {
    case 'paja_course_price_field' :
      $element['paja_course_price'] = array(
      '#type' => 'fieldset',
      '#title' => $element['#title'],
      '#attached' => array(
        'css' => array(drupal_get_path('module', 'paja_course_price') . '/paja_course_price.css'),
        'js' => array(drupal_get_path('module', 'paja_course_price') . '/paja_course_price.js'),
      ),
      '#prefix' => '<div id="paja-course-wrapper">',
      '#suffix' => '</div>',
      '#tree' => TRUE,
      );
      $element['paja_course_price']['result'] = array(
          '#title' => t(''),
          '#prefix' => '<div id="paja-course-result">',
          '#suffix' => '</div>',
      );
      
      $element['paja_course_price']['instructor_fee'] = array(
        '#type' => 'rangefield',
        '#min' => 0,
        '#max' => 255,
        '#title' => t('Vetäjän palkkio opintoviikolta'),
        '#prefix' => '<div id="paja-course-instructor-fee" class="paja-course-price-range-field">',
        '#suffix' => '</div>',
        '#default_value' => isset($items[$delta]['instructor_fee']) ? $items[$delta]['instructor_fee'] : '5',
        '#required' => $element['#required'],
      );
      $element['paja_course_price']['instructor_fee_number_field'] = array(
        '#type' => 'numberfield',
        '#min' => 0,
        '#max' => 255,
        '#prefix' => '<div id="paja-course-instructor-fee-number" class="paja-course-price-number-field">',
        '#suffix' => '</div>',
        '#default_value' => isset($items[$delta]['instructor_fee']) ? $items[$delta]['instructor_fee'] : '5',
      );
      
      $element['paja_course_price']['distance_days'] = array(
        '#type' => 'rangefield',
        '#min' => 0,
        '#max' => 255,
        '#title' => t('Etäpäivät'),
        '#prefix' => '<div id="paja-course-distance-days" class="paja-course-price-range-field">',
        '#suffix' => '</div>',
        '#default_value' => isset($items[$delta]['distance_days']) ? $items[$delta]['distance_days'] : '5',
        '#required' => $element['#required'],
      );
      $element['paja_course_price']['distance_days_number_field'] = array(
          '#type' => 'numberfield',
          '#min' => 0,
          '#max' => 255,
          '#prefix' => '<div id="paja-course-distance-days-number" class="paja-course-price-number-field">',
          '#suffix' => '</div>',
          '#default_value' => isset($items[$delta]['distance_days']) ? $items[$delta]['distance_days'] : '5',
      );
      
      $element['paja_course_price']['local_days'] = array(
        '#type' => 'rangefield',
        '#min' => 0,
        '#max' => 255,
        '#title' => t('Lähipäivät'),
        '#prefix' => '<div id="paja-course-local-days" class="paja-course-price-range-field">',
        '#suffix' => '</div>',
        '#default_value' => isset($items[$delta]['local_days']) ? $items[$delta]['local_days'] : '5',
        '#required' => $element['#required'],
      );
      $element['paja_course_price']['local_days_number_field'] = array(
        '#type' => 'numberfield',
        '#min' => 0,
        '#max' => 255,
        '#prefix' => '<div id="paja-course-local-days-number" class="paja-course-price-number-field">',
        '#suffix' => '</div>',
        '#default_value' => isset($items[$delta]['local_days']) ? $items[$delta]['local_days'] : '5',
      );
      
      $element['paja_course_price']['attendees_min'] = array(
        '#type' => 'rangefield',
        '#min' => 0,
        '#max' => 255,
        '#prefix' => '<div id="paja-course-attendees-min" class="paja-course-price-range-field">',
        '#suffix' => '</div>',
        '#title' => t('Osallistujamäärä, jolla kurssi toteutuu'),
        '#default_value' => isset($items[$delta]['attendees_min']) ? $items[$delta]['attendees_min'] : '5',
        '#required' => $element['#required'],
      );
      $element['paja_course_price']['attendees_min_number_field'] = array(
          '#type' => 'numberfield',
          '#min' => 0,
          '#max' => 255,
          '#prefix' => '<div id="paja-course-attendees-min-number" class="paja-course-price-number-field">',
          '#suffix' => '</div>',
          '#default_value' => isset($items[$delta]['attendees_min']) ? $items[$delta]['attendees_min'] : '5',
      );
      
      $element['paja_course_price']['attendees_max'] = array(
        '#type' => 'rangefield',
        '#min' => 0,
        '#max' => 255,
        '#prefix' => '<div id="paja-course-attendees-max" class="paja-course-price-range-field">',
        '#suffix' => '</div>',
        '#title' => t('Suurin mahdollinen osallistujamäärä kurssille'),
        '#default_value' => isset($items[$delta]['attendees_max']) ? $items[$delta]['attendees_max'] : '5',
        '#required' => $element['#required'],
      );
      $element['paja_course_price']['attendees_max_number_field'] = array(
        '#type' => 'numberfield',
        '#min' => 0,
        '#max' => 255,
        '#prefix' => '<div id="paja-course-attendees-max-number" class="paja-course-price-number-field">',
        '#suffix' => '</div>',
        '#default_value' => isset($items[$delta]['attendees_max']) ? $items[$delta]['attendees_max'] : '5',
      );      
      
      $element['paja_course_price']['miscellanous_costs'] = array(
        '#type' => 'rangefield',
        '#min' => 0,
        '#max' => 10000,
        '#prefix' => '<div id="paja-course-miscellanous-costs" class="paja-course-price-range-field">',
        '#suffix' => '</div>',
        '#title' => t('Muut kulut'),
        '#default_value' => isset($items[$delta]['miscellanous_costs']) ? $items[$delta]['miscellanous_costs'] : '5',
        '#required' => $element['#required'],
      );
      $element['paja_course_price']['miscellanous_costs_number_field'] = array(
        '#type' => 'numberfield',
        '#min' => 0,
        '#max' => 10000,
        '#prefix' => '<div id="paja-course-miscellanous-costs-number" class="paja-course-price-number-field">',
        '#suffix' => '</div>',
        '#default_value' => isset($items[$delta]['miscellanous_costs']) ? $items[$delta]['miscellanous_costs'] : '5',
      );
      
      $element['paja_course_price']['price'] = array(
        '#type' => 'rangefield',
        '#min' => 0,
        '#max' => 2000,
        '#prefix' => '<div id="paja-course-price" class="paja-course-price-range-field">',
        '#suffix' => '</div>',
        '#title' => t('Kurssimaksu'),
        '#default_value' => isset($items[$delta]['price']) ? $items[$delta]['price'] : '5',
        '#required' => $element['#required'],
      );
      
      $element['paja_course_price']['price_number_field'] = array(
        '#type' => 'numberfield',
        '#min' => 0,
        '#max' => 2000,
        '#prefix' => '<div id="paja-course-price-number" class="paja-course-price-number-field">',
        '#suffix' => '</div>',
        '#default_value' => isset($items[$delta]['price']) ? $items[$delta]['price'] : '5',
      );
      break;
  }
  return $element;
}

/**
 * Implements hook_field_presave().
 */
function paja_course_price_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items) {
  foreach ($items as $delta => $item) {
    $items[$delta]['instructor_fee'] = $item['paja_course_price']['instructor_fee'];
    $items[$delta]['distance_days'] = $item['paja_course_price']['distance_days'];
    $items[$delta]['local_days'] = $item['paja_course_price']['local_days'];
    $items[$delta]['attendees_min'] = $item['paja_course_price']['attendees_min'];
    $items[$delta]['attendees_max'] = $item['paja_course_price']['attendees_max'];    
    $items[$delta]['miscellanous_costs'] = $item['paja_course_price']['miscellanous_costs'];
    $items[$delta]['price'] = $item['paja_course_price']['price'];
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function paja_course_price_field_formatter_info() {
  return array(
      'paja_course_price_default' => array(
          'label' => t('Price'),
          'field types' => array('paja_course_price'),
      ),
      'paja_course_price_mini_panel' => array(
          'label' => t('Price mini panel hack'),
          'field types' => array('paja_course_price'),
      ),
      'paja_course_price_attendees_min' => array(
          'label' => t('Min attendees'),
          'field types' => array('paja_course_price'),
      ),
      'paja_course_price_attendees_max' => array(
          'label' => t('Max attendees'),
          'field types' => array('paja_course_price'),
      ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function paja_course_price_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'paja_course_price_default' :
      foreach ($items as $delta => $item) {
        if (isset($item['price'])) {
          $element[$delta]['#markup'] = $item['price'] . "€";
        }
      }
      break;
      case 'paja_course_price_attendees_min' :
        foreach ($items as $delta => $item) {
          if (isset($item['attendees_min'])) {
            $element[$delta]['#markup'] = $item['attendees_min'];
          }
        }
        break;
        case 'paja_course_price_attendees_max' :
          foreach ($items as $delta => $item) {
            if (isset($item['attendees_max'])) {
              $element[$delta]['#markup'] = $item['attendees_max'];
            }
          }
          break;
          case 'paja_course_price_mini_panel' :
          foreach ($items as $delta => $item) {
            if (isset($item['price'])) {
              $element[$delta]['#markup'] = '<div class="field-label">Hinta:&nbsp;</div>' . $item['price'] . "€";
            }
          }
          break;
  }
  return $element;
}



